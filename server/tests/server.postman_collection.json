{
	"info": {
		"_postman_id": "d4ad1aa5-44d6-4a32-ab93-0c672a793bbb",
		"name": "WebDev",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "post User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"user_id\", jsonData._id);\r",
									"// the variable is global so it can be used for the other CRUD parts\r",
									"// takes the id of whatever json file and sets it to \"user_id\" variable\r",
									"\r",
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"email@email.com\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('email@email.com');\r",
									"    pm.expect(jsonData.password).to.eql('password');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.password).to.eql('poggies');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"email@email.com\",\r\n    \"password\": \"poggies\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('frank@gmail.com');\r",
									"    pm.expect(jsonData.password).to.eql('yesss');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"frank@gmail.com\",\r\n    \"password\": \"yesss\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/users/{{user_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Locations",
			"item": [
				{
					"name": "post Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"location_id\", jsonData._id);\r",
									"\r",
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"picture\": \"pic\",\r\n    \"x_coordinate\": \"16\",\r\n    \"y_coordinate\": \"12\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/locations/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"locations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/locations/{{location_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Location by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.picture).to.eql('pic');\r",
									"    pm.expect(jsonData.x_coordinate).to.eql(16);\r",
									"    pm.expect(jsonData.y_coordinate).to.eql(12);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/locations/{{location_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.picture).to.eql('newPic');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"picture\": \"newPic\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/locations/{{location_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.picture).to.eql('anotherlink');\r",
									"    pm.expect(jsonData.x_coordinate).to.eql(6);\r",
									"    pm.expect(jsonData.y_coordinate).to.eql(25);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"picture\": \"anotherlink\",\r\n    \"x_coordinate\": \"6\",\r\n    \"y_coordinate\": \"25\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/locations/{{location_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/locations/{{location_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"locations",
								"{{location_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete all Locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Expect 404 because the only created location is already deleted in the previous test\r",
									"\r",
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/locations/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"locations",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Quizes",
			"item": [
				{
					"name": "post Quiz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"quiz_id\", jsonData._id);\r",
									"\r",
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"category\": \"Large\",\r\n    \"name\": \"The HUGE Quiz\",\r\n    \"image\": \"https://play-lh.googleusercontent.com/CC9gYlJbBCSFq8vKR1f_62oG17-3m7LEQ_GGZSoy_Kk-_uiDwBHX4eVzHkeI3i9Ztg\",\r\n    \"description\": \"This quiz will test your GBG knowledge\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/quizes/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Quizes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/quizes/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get Quiz by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.category).to.eql('Large');\r",
									"    pm.expect(jsonData.name).to.eql('The HUGE Quiz');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/quizes/{{quiz_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes",
								"{{quiz_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "filter Quiz by category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/quizes/filter?category=Large",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes",
								"filter"
							],
							"query": [
								{
									"key": "category",
									"value": "Large"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "patch Quiz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql('The Quiz');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The Quiz\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/quizes/{{quiz_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes",
								"{{quiz_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put Quiz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.category).to.eql('change');\r",
									"    pm.expect(jsonData.name).to.eql('Vlad');\r",
									"    pm.expect(jsonData.image).to.eql('https://d1ymz67w5raq8g.cloudfront.net/Pictures/480xany/6/5/5/509655_shutterstock_1506580442_769367.jpg');\r",
									"    pm.expect(jsonData.description).to.eql('This quiz won\\'t test anything');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"category\": \"change\",\r\n    \"name\": \"Vlad\",\r\n    \"image\": \"https://d1ymz67w5raq8g.cloudfront.net/Pictures/480xany/6/5/5/509655_shutterstock_1506580442_769367.jpg\",\r\n    \"description\": \"This quiz won't test anything\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/quizes/{{quiz_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes",
								"{{quiz_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Quiz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/quizes/{{quiz_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes",
								"{{quiz_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete all Quizes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Expect 404 because the only created location is already deleted in the previous test\r",
									"\r",
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/quizes",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Questions",
			"item": [
				{
					"name": "post Question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"question_id\", jsonData._id);\r",
									"\r",
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"quiz_id\": \"{{quiz_id}}\",\r\n    \"type\": \"True OR False\",\r\n    \"description\": \"What happened here?\",\r\n    \"answer\": \"Nothing\",\r\n    \"options\": [\"Not the answer\", \"Definitely not the answer lol\", \"The tricky one but not there yet\"],\r\n    \"score\": \"100\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/questions",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"questions"
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Questions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/questions/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"questions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get Question by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/questions/{{question_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"questions",
								"{{question_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Question by Quiz ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/quizes/{{quiz_id}}/questions",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"quizes",
								"{{quiz_id}}",
								"questions"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch Question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.score).to.eql(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"score\": \"500\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/questions/{{question_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"questions",
								"{{question_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put Question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql('Prompt');\r",
									"    pm.expect(jsonData.description).to.eql('What happened here, again?');\r",
									"    pm.expect(jsonData.answer).to.eql('Nothing again');\r",
									"    pm.expect(jsonData.options.length).to.eql(3);\r",
									"    pm.expect(jsonData.score).to.eql(150);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"Prompt\",\r\n    \"description\": \"What happened here, again?\",\r\n    \"answer\": \"Nothing again\",\r\n    \"options\": [\"Change 1\", \"Change 2\", \"Change 3\"],\r\n    \"score\": \"150\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/questions/{{question_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"questions",
								"{{question_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/questions/{{question_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"questions",
								"{{question_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete All Questions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Expect 404 because the only created location is already deleted in the previous test\r",
									"\r",
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/questions/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"questions",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Scores",
			"item": [
				{
					"name": "post Score",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.globals.set(\"score_id\", jsonData._id);\r",
									"\r",
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"9312384\",\r\n    \"quiz_id\": \"{{quiz_id}}\",\r\n    \"username\": \"Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/scores/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"scores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Scores",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/scores/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"scores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get Score by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/scores/{{score_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"scores",
								"{{score_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Scores for a Quiz By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/scores/quizes/{{quiz_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"scores",
								"quizes",
								"{{quiz_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch Score",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(2000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"2000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/scores/{{score_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"scores",
								"{{score_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put Score",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"response should have valid JSON data\", function() {\r",
									"    var jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(150);\r",
									"    pm.expect(jsonData.user_id).to.eql(pm.globals.get('user_id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"150\",\r\n    \"username\": \"ChangedUser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/scores/{{score_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"scores",
								"{{score_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete Score",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/scores/{{score_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"scores",
								"{{score_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}